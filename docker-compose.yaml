services:
  api-gateway:
    container_name: api-gateway
    build:
      context: ./api-gateway
    environment:
      - PORT=8080
    ports:
      - "8080:8080"
    networks:
      - app-network
    depends_on:
      - kafka
      - zookeeper

  stock-data-service:
    container_name: stock-data-service
    build:
      context: ./stock-data-service
    environment:
      - PORT=8081
      - MONGODB_URI=mongodb+srv://admin:prbjXnbRnwX8ISdM@stocktradersbetestclust.cjywc.mongodb.net/StockTradersTest?retryWrites=true&w=majority
      - KAFKA_CLIENT_ID=websocket-service
      - KAFKA_BROKER=kafka:9092
      - KAFKA_GROUP_ID=websocket-consumer
    ports:
      - "8081:8081"
    networks:
      - app-network
    depends_on:
      - api-gateway

  websocket-service:
    container_name: websocket-service
    build:
      context: ./websocket-service
    environment:
      - PORT=8082
      - KAFKA_CLIENT_ID=websocket-service
      - KAFKA_BROKER=kafka:9092
      - KAFKA_GROUP_ID=websocket-consumer
    ports:
      - "8082:8082"
    networks:
      - app-network
    depends_on:
      - stock-data-service

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    networks:
      - app-network
    environment:
      DOCKER_API_VERSION: 1.22
      KAFKA_ADVERTISED_HOST_NAME: 192.168.1.117
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    restart: unless-stopped

  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge
